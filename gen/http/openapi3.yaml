openapi: 3.0.3
info:
    title: Library Service
    description: Service for managing library operations
    version: "1.0"
servers:
    - url: http://localhost:8000
paths:
    /books:
        get:
            tags:
                - books
            summary: list books
            description: Retrieve all books
            operationId: books#list
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Book'
                                example:
                                    - author: Autem ratione quos maiores aut.
                                      cover: QmFzZTY0IG9mIHRoZSBCb29rIGNvdmVyIGltYWdl
                                      id: 839652626468377019
                                      published_at: "1997-07-25T10:42:46Z"
                                      title: Natus nisi.
                                    - author: Autem ratione quos maiores aut.
                                      cover: QmFzZTY0IG9mIHRoZSBCb29rIGNvdmVyIGltYWdl
                                      id: 839652626468377019
                                      published_at: "1997-07-25T10:42:46Z"
                                      title: Natus nisi.
                            example:
                                - author: Autem ratione quos maiores aut.
                                  cover: QmFzZTY0IG9mIHRoZSBCb29rIGNvdmVyIGltYWdl
                                  id: 839652626468377019
                                  published_at: "1997-07-25T10:42:46Z"
                                  title: Natus nisi.
                                - author: Autem ratione quos maiores aut.
                                  cover: QmFzZTY0IG9mIHRoZSBCb29rIGNvdmVyIGltYWdl
                                  id: 839652626468377019
                                  published_at: "1997-07-25T10:42:46Z"
                                  title: Natus nisi.
        post:
            tags:
                - books
            summary: create books
            description: Create a new book
            operationId: books#create
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateRequestBody'
                        example:
                            author: Minus adipisci consequuntur.
                            cover: QmFzZTY0IG9mIHRoZSBCb29rIGNvdmVyIGltYWdl
                            published_at: "2012-06-24T11:13:57Z"
                            title: Ut in qui quidem ab est.
            responses:
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Book'
                            example:
                                author: Quia et doloremque iste tenetur reiciendis.
                                cover: QmFzZTY0IG9mIHRoZSBCb29rIGNvdmVyIGltYWdl
                                id: 451593135011823783
                                published_at: "2001-05-06T03:18:26Z"
                                title: Quos voluptas consequuntur distinctio.
                "400":
                    description: 'bad_request: Invalid request'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /books/{id}:
        delete:
            tags:
                - books
            summary: delete books
            description: Delete a book by ID
            operationId: books#delete
            parameters:
                - name: id
                  in: path
                  description: ID of the book
                  required: true
                  schema:
                    type: integer
                    description: ID of the book
                    example: 954307459471136738
                    format: int64
                  example: 6011518428279830551
            responses:
                "204":
                    description: No Content response.
                "404":
                    description: 'not_found: Book not found'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
        get:
            tags:
                - books
            summary: show books
            description: Retrieve a book by ID
            operationId: books#show
            parameters:
                - name: id
                  in: path
                  description: ID of the book
                  required: true
                  schema:
                    type: integer
                    description: ID of the book
                    example: 5473319107528582917
                    format: int64
                  example: 6759162165553766526
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Book'
                            example:
                                author: Earum ratione.
                                cover: QmFzZTY0IG9mIHRoZSBCb29rIGNvdmVyIGltYWdl
                                id: 5236897334243105371
                                published_at: "2011-10-30T03:26:56Z"
                                title: Totam consequatur dolorem dolores quos nulla.
                "404":
                    description: 'not_found: Book not found'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
        put:
            tags:
                - books
            summary: update books
            description: Update an existing book
            operationId: books#update
            parameters:
                - name: id
                  in: path
                  description: ID of the book
                  required: true
                  schema:
                    type: integer
                    description: ID of the book
                    example: 3550288720998950124
                    format: int64
                  example: 1849925603555373327
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateRequestBody'
                        example:
                            author: Quo vel ipsa et minima.
                            cover: QmFzZTY0IG9mIHRoZSBCb29rIGNvdmVyIGltYWdl
                            published_at: "1990-02-10T16:36:44Z"
                            title: Maiores facilis ducimus quia harum.
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Book'
                            example:
                                author: Magnam neque molestiae.
                                cover: QmFzZTY0IG9mIHRoZSBCb29rIGNvdmVyIGltYWdl
                                id: 809293982379405338
                                published_at: "1979-09-20T01:03:47Z"
                                title: Ab odio et eius et laboriosam maxime.
                "400":
                    description: 'bad_request: Invalid request'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: 'not_found: Book not found'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /openapi.json:
        get:
            tags:
                - books
            summary: Download ./gen/http/openapi.json
            operationId: books#/openapi.json
            responses:
                "200":
                    description: File downloaded
components:
    schemas:
        Book:
            type: object
            properties:
                author:
                    type: string
                    description: Author of the book
                    example: Mollitia deserunt ut.
                cover:
                    type: string
                    description: Base64 of the Book cover image
                    example: QmFzZTY0IG9mIHRoZSBCb29rIGNvdmVyIGltYWdl
                id:
                    type: integer
                    description: ID of the book
                    example: 6365987449865989254
                    format: int64
                published_at:
                    type: string
                    description: Published date of the book
                    example: "1993-04-16T01:20:11Z"
                    format: date-time
                title:
                    type: string
                    description: Title of the book
                    example: Corporis explicabo cupiditate omnis.
            description: book entity.
            example:
                author: Similique blanditiis.
                cover: QmFzZTY0IG9mIHRoZSBCb29rIGNvdmVyIGltYWdl
                id: 9005968646101795375
                published_at: "1970-04-08T16:16:29Z"
                title: Tempore pariatur ab consequatur est.
        CreateRequestBody:
            type: object
            properties:
                author:
                    type: string
                    description: Author of the book
                    example: Quae vel nesciunt doloremque veniam quo quis.
                cover:
                    type: string
                    description: Base64 of the Book cover image
                    example: QmFzZTY0IG9mIHRoZSBCb29rIGNvdmVyIGltYWdl
                published_at:
                    type: string
                    description: Published date of the book
                    example: "1997-11-30T02:20:12Z"
                    format: date-time
                title:
                    type: string
                    description: Title of the book
                    example: Sit sunt et quo rerum sit.
            example:
                author: Qui voluptate quaerat.
                cover: QmFzZTY0IG9mIHRoZSBCb29rIGNvdmVyIGltYWdl
                published_at: "2008-06-24T07:45:11Z"
                title: Odit rerum porro sequi.
            required:
                - title
                - author
        Error:
            type: object
            properties:
                fault:
                    type: boolean
                    description: Is the error a server-side fault?
                    example: true
                id:
                    type: string
                    description: ID is a unique identifier for this particular occurrence of the problem.
                    example: 123abc
                message:
                    type: string
                    description: Message is a human-readable explanation specific to this occurrence of the problem.
                    example: parameter 'p' must be an integer
                name:
                    type: string
                    description: Name is the name of this class of errors.
                    example: bad_request
                temporary:
                    type: boolean
                    description: Is the error temporary?
                    example: false
                timeout:
                    type: boolean
                    description: Is the error a timeout?
                    example: false
            description: Book not found
            example:
                fault: false
                id: 123abc
                message: parameter 'p' must be an integer
                name: bad_request
                temporary: true
                timeout: true
            required:
                - name
                - id
                - message
                - temporary
                - timeout
                - fault
tags:
    - name: books
      description: The book service performs CRUD operations on the books resource.
