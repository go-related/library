openapi: 3.0.3
info:
    title: Library Service
    description: Service for managing library operations
    version: "1.0"
servers:
    - url: http://localhost:8000
paths:
    /books:
        get:
            tags:
                - books
            summary: items books
            description: Retrieve all books
            operationId: books#items
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Book'
                                example:
                                    - author: Fugit atque.
                                      cover: Labore iusto velit nisi asperiores quae laboriosam.
                                      id: 574123798766923736
                                      published_at: Soluta ut maiores omnis alias et sapiente.
                                      title: Est ea ipsam et.
                                    - author: Fugit atque.
                                      cover: Labore iusto velit nisi asperiores quae laboriosam.
                                      id: 574123798766923736
                                      published_at: Soluta ut maiores omnis alias et sapiente.
                                      title: Est ea ipsam et.
                            example:
                                - author: Fugit atque.
                                  cover: Labore iusto velit nisi asperiores quae laboriosam.
                                  id: 574123798766923736
                                  published_at: Soluta ut maiores omnis alias et sapiente.
                                  title: Est ea ipsam et.
                                - author: Fugit atque.
                                  cover: Labore iusto velit nisi asperiores quae laboriosam.
                                  id: 574123798766923736
                                  published_at: Soluta ut maiores omnis alias et sapiente.
                                  title: Est ea ipsam et.
        post:
            tags:
                - books
            summary: create books
            description: Create a new book
            operationId: books#create
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateRequestBody'
                        example:
                            author: Ut sed ut.
                            cover: Accusamus magni ex.
                            published_at: Non corporis quis esse ratione laboriosam.
                            title: Assumenda molestias nihil illo dolorem eveniet.
            responses:
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Book'
                            example:
                                author: Quod deleniti sit libero quia delectus illum.
                                cover: Quam alias totam odit vel.
                                id: 3298023426695319693
                                published_at: Ea ducimus sed illo.
                                title: Fugiat iste dolor.
    /books/{id}:
        delete:
            tags:
                - books
            summary: delete books
            description: Delete a book by ID
            operationId: books#delete
            parameters:
                - name: id
                  in: path
                  description: ID of the book
                  required: true
                  schema:
                    type: integer
                    description: ID of the book
                    example: 5931299780148696562
                    format: int64
                  example: 3430727541953347701
            responses:
                "204":
                    description: No Content response.
                "404":
                    description: 'not_found: Book not found'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
        get:
            tags:
                - books
            summary: item books
            description: Retrieve a book by ID
            operationId: books#item
            parameters:
                - name: id
                  in: path
                  description: ID of the book
                  required: true
                  schema:
                    type: integer
                    description: ID of the book
                    example: 7035043250637820502
                    format: int64
                  example: 1518949043902126798
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Book'
                            example:
                                author: Beatae laudantium.
                                cover: Earum ipsa.
                                id: 5020441747468955616
                                published_at: Provident et est deserunt molestiae eveniet culpa.
                                title: Reprehenderit commodi.
                "404":
                    description: 'not_found: Book not found'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
        put:
            tags:
                - books
            summary: update books
            description: Update an existing book
            operationId: books#update
            parameters:
                - name: id
                  in: path
                  description: ID of the book
                  required: true
                  schema:
                    type: integer
                    description: ID of the book
                    example: 5271667840791771538
                    format: int64
                  example: 7283074570080235998
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateRequestBody'
                        example:
                            author: Natus nisi.
                            cover: Autem ratione quos maiores aut.
                            published_at: Repellendus eius itaque doloribus.
                            title: Quae voluptas esse ea id assumenda a.
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Book'
                            example:
                                author: Dolorum ut cum est est.
                                cover: Dolorem omnis enim magnam consequatur.
                                id: 680707819253261469
                                published_at: Minima et ut iure placeat voluptatem laudantium.
                                title: Eveniet quisquam necessitatibus nostrum nihil eum.
                "404":
                    description: 'not_found: Book not found'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /openapi.json:
        get:
            tags:
                - books
            summary: Download ./gen/http/openapi.json
            operationId: books#/openapi.json
            responses:
                "200":
                    description: File downloaded
components:
    schemas:
        Book:
            type: object
            properties:
                author:
                    type: string
                    description: Author of the book
                    example: Harum non voluptate nihil voluptatem labore.
                cover:
                    type: string
                    description: Book cover image URL
                    example: Occaecati qui dolorem facilis illo laborum.
                id:
                    type: integer
                    description: ID of the book
                    example: 6296725216571199201
                    format: int64
                published_at:
                    type: string
                    description: Published date of the book
                    example: Error amet sed voluptas.
                title:
                    type: string
                    description: Title of the book
                    example: Non enim totam harum tenetur.
            description: book entity.
            example:
                author: Iure dolor.
                cover: Minus corporis qui nostrum.
                id: 6582752785552411377
                published_at: Et dolorum voluptatem quae nesciunt.
                title: Autem quae cumque.
        CreateRequestBody:
            type: object
            properties:
                author:
                    type: string
                    description: Author of the book
                    example: In molestiae autem eveniet laborum.
                cover:
                    type: string
                    description: Book cover image URL
                    example: Praesentium omnis eum ut.
                published_at:
                    type: string
                    description: Published date of the book
                    example: Repudiandae minus.
                title:
                    type: string
                    description: Title of the book
                    example: Necessitatibus nam eos exercitationem.
            example:
                author: Illum iusto accusamus sit animi aperiam beatae.
                cover: Reiciendis fugit.
                published_at: Perspiciatis provident aspernatur.
                title: Omnis iusto quia et.
            required:
                - title
                - author
        Error:
            type: object
            properties:
                fault:
                    type: boolean
                    description: Is the error a server-side fault?
                    example: true
                id:
                    type: string
                    description: ID is a unique identifier for this particular occurrence of the problem.
                    example: 123abc
                message:
                    type: string
                    description: Message is a human-readable explanation specific to this occurrence of the problem.
                    example: parameter 'p' must be an integer
                name:
                    type: string
                    description: Name is the name of this class of errors.
                    example: bad_request
                temporary:
                    type: boolean
                    description: Is the error temporary?
                    example: true
                timeout:
                    type: boolean
                    description: Is the error a timeout?
                    example: true
            description: Book not found
            example:
                fault: false
                id: 123abc
                message: parameter 'p' must be an integer
                name: bad_request
                temporary: false
                timeout: false
            required:
                - name
                - id
                - message
                - temporary
                - timeout
                - fault
tags:
    - name: books
      description: The book service performs CRUD operations on the books resource.
