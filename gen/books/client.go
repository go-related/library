// Code generated by goa v3.13.2, DO NOT EDIT.
//
// books client
//
// Command:
// $ goa gen github.com/jt/books/design

package books

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "books" service client.
type Client struct {
	ItemsEndpoint  goa.Endpoint
	ItemEndpoint   goa.Endpoint
	CreateEndpoint goa.Endpoint
	UpdateEndpoint goa.Endpoint
	DeleteEndpoint goa.Endpoint
}

// NewClient initializes a "books" service client given the endpoints.
func NewClient(items, item, create, update, delete_ goa.Endpoint) *Client {
	return &Client{
		ItemsEndpoint:  items,
		ItemEndpoint:   item,
		CreateEndpoint: create,
		UpdateEndpoint: update,
		DeleteEndpoint: delete_,
	}
}

// Items calls the "items" endpoint of the "books" service.
// Items may return the following errors:
//   - "not_found" (type *goa.ServiceError): Book not found
//   - error: internal error
func (c *Client) Items(ctx context.Context) (res []*Book, err error) {
	var ires any
	ires, err = c.ItemsEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]*Book), nil
}

// Item calls the "item" endpoint of the "books" service.
// Item may return the following errors:
//   - "not_found" (type *goa.ServiceError): Book not found
//   - error: internal error
func (c *Client) Item(ctx context.Context, p *ItemPayload) (res *Book, err error) {
	var ires any
	ires, err = c.ItemEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Book), nil
}

// Create calls the "create" endpoint of the "books" service.
// Create may return the following errors:
//   - "not_found" (type *goa.ServiceError): Book not found
//   - error: internal error
func (c *Client) Create(ctx context.Context, p *CreateBookPayload) (res *Book, err error) {
	var ires any
	ires, err = c.CreateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Book), nil
}

// Update calls the "update" endpoint of the "books" service.
// Update may return the following errors:
//   - "not_found" (type *goa.ServiceError): Book not found
//   - error: internal error
func (c *Client) Update(ctx context.Context, p *UpdateBookPayload) (res *Book, err error) {
	var ires any
	ires, err = c.UpdateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Book), nil
}

// Delete calls the "delete" endpoint of the "books" service.
// Delete may return the following errors:
//   - "not_found" (type *goa.ServiceError): Book not found
//   - error: internal error
func (c *Client) Delete(ctx context.Context, p *DeletePayload) (err error) {
	_, err = c.DeleteEndpoint(ctx, p)
	return
}
